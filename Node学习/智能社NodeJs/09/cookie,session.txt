cookie、session


http-无状态的



cookie:在浏览器保存一些数据，每次请求都会带过来
不安全、有限（4K）


session:保存数据，保存在服务端
安全、无限
不能独立存在，基于cookie


session：基于cookie实现的

cookie中会有一个seesion的ID，服务器利用sessionid找到session文件、读取、写入
隐患：session劫持



cookie:
1.读取——cookie-parser
2.发送


session:
cookie-session



cookie加密
req.secret = "zmcnodesercret";

cookie解密
server.use(cookieParser("zmcnodesercret"));
console.log("签名", req.signedCookies);


cookie:
1.cookie空间非常小——省着用
2.安全性非常差


1.精打细算
2.校验cookie是否被篡改过

a.发送cookie
res.secret="字符串"
res.cookie(名字，值,{path:'/',maxAge:毫秒,signed:true});



b.读取——cookie
server.use(cookieparser("密钥"));

server.use(function(){
    req.cookies;    未签名版
    req.signedCookies;签名版
});



c.删除cookie
res.clearCookie(名字);


session:
cookie-sesseion
1、写入
2、读取
var arr=[];
for(var i=0;i<100000;i++)
{
    arr.push("sig_"+Math.random());
}
server.use(cookieParser());
server.use(cookieSession({
    name:"sess",
    keys:arr,
    maxAge:2*3600*1000
}));

server.use("/",function(){
    req.session
});
delete req.session//删除session


